/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./src/context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Image: { // root type
    alttext?: string | null; // String
    baseimageurl?: string | null; // String
    copyright?: string | null; // String
    date?: string | null; // String
    description?: string | null; // String
    displayorder?: number | null; // Int
    format?: string | null; // String
    height?: number | null; // Int
    idsid?: number | null; // Int
    iiifbaseuri?: string | null; // String
    publiccaption?: string | null; // String
    renditionnumber?: string | null; // String
    technique?: string | null; // String
    width?: number | null; // Int
  }
  Info: { // root type
    next?: string | null; // String
    page?: number | null; // Int
    pages?: number | null; // Int
    prev?: string | null; // String
    totalrecords?: number | null; // Int
    totalrecordsperquery?: number | null; // Int
  }
  Object: { // root type
    accessionyear?: string | null; // String
    colorcount?: number | null; // Int
    dateoffirstpageview?: string | null; // String
    dateoflastpageview?: string | null; // String
    description?: string | null; // String
    edition?: number | null; // Int
    groupcount?: number | null; // Int
    id?: number | null; // Int
    imagecount?: number | null; // Int
    lastupdate?: string | null; // String
    mediacount?: number | null; // Int
    objectnumber?: string | null; // String
    people?: number | null; // Int
    primaryimageurl?: string | null; // String
    rank?: number | null; // Int
    technique?: string | null; // String
    title?: string | null; // String
    totalpageviews?: number | null; // Int
  }
  Objects: {};
  Query: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Image: { // field return type
    alttext: string | null; // String
    baseimageurl: string | null; // String
    copyright: string | null; // String
    date: string | null; // String
    description: string | null; // String
    displayorder: number | null; // Int
    format: string | null; // String
    height: number | null; // Int
    idsid: number | null; // Int
    iiifbaseuri: string | null; // String
    publiccaption: string | null; // String
    renditionnumber: string | null; // String
    technique: string | null; // String
    width: number | null; // Int
  }
  Info: { // field return type
    next: string | null; // String
    page: number | null; // Int
    pages: number | null; // Int
    prev: string | null; // String
    totalrecords: number | null; // Int
    totalrecordsperquery: number | null; // Int
  }
  Object: { // field return type
    accessionyear: string | null; // String
    colorcount: number | null; // Int
    dateoffirstpageview: string | null; // String
    dateoflastpageview: string | null; // String
    description: string | null; // String
    edition: number | null; // Int
    groupcount: number | null; // Int
    id: number | null; // Int
    imagecount: number | null; // Int
    images: Array<NexusGenRootTypes['Image'] | null> | null; // [Image]
    lastupdate: string | null; // String
    mediacount: number | null; // Int
    objectnumber: string | null; // String
    people: number | null; // Int
    primaryimageurl: string | null; // String
    rank: number | null; // Int
    technique: string | null; // String
    title: string | null; // String
    totalpageviews: number | null; // Int
  }
  Objects: { // field return type
    info: NexusGenRootTypes['Info'] | null; // Info
    records: Array<NexusGenRootTypes['Object'] | null> | null; // [Object]
  }
  Query: { // field return type
    objects: NexusGenRootTypes['Objects']; // Objects!
  }
}

export interface NexusGenFieldTypeNames {
  Image: { // field return type name
    alttext: 'String'
    baseimageurl: 'String'
    copyright: 'String'
    date: 'String'
    description: 'String'
    displayorder: 'Int'
    format: 'String'
    height: 'Int'
    idsid: 'Int'
    iiifbaseuri: 'String'
    publiccaption: 'String'
    renditionnumber: 'String'
    technique: 'String'
    width: 'Int'
  }
  Info: { // field return type name
    next: 'String'
    page: 'Int'
    pages: 'Int'
    prev: 'String'
    totalrecords: 'Int'
    totalrecordsperquery: 'Int'
  }
  Object: { // field return type name
    accessionyear: 'String'
    colorcount: 'Int'
    dateoffirstpageview: 'String'
    dateoflastpageview: 'String'
    description: 'String'
    edition: 'Int'
    groupcount: 'Int'
    id: 'Int'
    imagecount: 'Int'
    images: 'Image'
    lastupdate: 'String'
    mediacount: 'Int'
    objectnumber: 'String'
    people: 'Int'
    primaryimageurl: 'String'
    rank: 'Int'
    technique: 'String'
    title: 'String'
    totalpageviews: 'Int'
  }
  Objects: { // field return type name
    info: 'Info'
    records: 'Object'
  }
  Query: { // field return type name
    objects: 'Objects'
  }
}

export interface NexusGenArgTypes {
  Query: {
    objects: { // args
      classification?: string | null; // String
      hasimage?: number | null; // Int
      page?: number | null; // Int
      size?: number | null; // Int
      sort?: string | null; // String
      sortorder?: string | null; // String
      verificationlevel?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}